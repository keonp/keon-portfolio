@mixin containerWidth($columns, $pixels) {
    width: calc((100% / $columns) - $pixels);
    height: width;
}

@mixin contactGalleryWidth($min-width, $height) {
    min-width: $min-width;
    height: $height;
}

@keyframes slide {
    10% {
        transform: translateX(-103.9%);
    }

    25% {
        transform: translateX(-99.9%);
    }
    
    35% {
        transform: translateX(-203.9%);
    }

    50% {
        transform: translateX(-199.9%);
    }
    
    60% {
        transform: translateX(-303.9%);
    }

    75% {
        transform: translateX(-299.9%);
    }
    
    85% {
        transform: translateX(-403.9%);
    }

    100% {
        transform: translateX(-399.9%);
    } 
}

@keyframes navGradient {
    0% {background-position: 0% 50%;}
    50% {background-position: 100% 50%;}
    100% {background-position: 0% 50%;}
}

@mixin position($index, $angle, $radius) {

    $rotation: math.div($index, 10) + 0.6;

    transform: rotate(($rotation) * 1turn) translate($radius) rotate(-($rotation) * 1turn);

    @include spinWheel($rotation, $radius, $index);
    animation: spin#{$index} 20s linear infinite;
    
}

@mixin spinWheel ($rotation, $radius, $index) {

    @keyframes spin#{$index} {
        10% {
            transform: rotate(($rotation + 0.1) * 1turn) translate($radius) rotate(-($rotation + 0.1) * 1turn);
        }
        
        20% {
            transform: rotate(($rotation + 0.2) * 1turn) translate($radius) rotate(-($rotation + 0.2) * 1turn);
        }
        
        30% {
            transform: rotate(($rotation + 0.3) * 1turn) translate($radius) rotate(-($rotation + 0.3) * 1turn);
        }
        
        40% {
            transform: rotate(($rotation + 0.4) * 1turn) translate($radius) rotate(-($rotation + 0.4) * 1turn);
        }
        
        50% {
            transform: rotate(($rotation + 0.5) * 1turn) translate($radius) rotate(-($rotation + 0.5) * 1turn);
        }
        
        60% {
            transform: rotate(($rotation + 0.6) * 1turn) translate($radius) rotate(-($rotation + 0.6) * 1turn);
        }
        
        70% {
            transform: rotate(($rotation + 0.7) * 1turn) translate($radius) rotate(-($rotation + 0.7) * 1turn);
        }
        
        80% {
            transform: rotate(($rotation + 0.8) * 1turn) translate($radius) rotate(-($rotation + 0.8) * 1turn);
        }
        
        90% {
            transform: rotate(($rotation + 0.9) * 1turn) translate($radius) rotate(-($rotation + 0.9) * 1turn);
        }
        
        100% {
            transform: rotate(($rotation + 1) * 1turn) translate($radius) rotate(-($rotation + 1) * 1turn);
        }  
    }
}

@keyframes bigSpin {
    10% {
        transform: translate(-50%, -50%) rotate(0.1turn);
    }
    
    20% {
        transform: translate(-50%, -50%) rotate(0.2turn);
    }
    
    30% {
        transform: translate(-50%, -50%) rotate(0.3turn);   
    }
    
    40% {
        transform: translate(-50%, -50%) rotate(0.4turn);
    }
    
    50% {
        transform: translate(-50%, -50%) rotate(0.5turn);
    }
    
    60% {
        transform: translate(-50%, -50%) rotate(0.6turn);
    }
    
    70% {
        transform: translate(-50%, -50%) rotate(0.7turn);
    }
    
    80% {
        transform: translate(-50%, -50%) rotate(0.8turn);
    }
    
    90% {
        transform: translate(-50%, -50%) rotate(0.9turn);
    }
    
    100% {
        transform: translate(-50%, -50%) rotate(1turn);
    }
}

// @mixin spinWheel ($rotation, $radius) {
//     @keyframes spin {
//         10% {
//             transform: rotate(($rotation) * 1turn) translate($radius) rotate(-($rotation + 0.1) * 1turn);
//         }
        
//         20% {
//             transform: rotate(($rotation) * 1turn) translate($radius) rotate(-($rotation + 0.2) * 1turn);
//         }
        
//         30% {
//             transform: rotate(($rotation) * 1turn) translate($radius) rotate(-($rotation + 0.3) * 1turn);
//         }
        
//         40% {
//             transform: rotate(($rotation) * 1turn) translate($radius) rotate(-($rotation + 0.4) * 1turn);
//         }
        
//         50% {
//             transform: rotate(($rotation) * 1turn) translate($radius) rotate(-($rotation + 0.5) * 1turn);
//         }
        
//         60% {
//             transform: rotate(($rotation) * 1turn) translate($radius) rotate(-($rotation + 0.6) * 1turn);
//         }
        
//         70% {
//             transform: rotate(($rotation) * 1turn) translate($radius) rotate(-($rotation + 0.7) * 1turn);
//         }
        
//         80% {
//             transform: rotate(($rotation) * 1turn) translate($radius) rotate(-($rotation + 0.8) * 1turn);
//         }
        
//         90% {
//             transform: rotate(($rotation) * 1turn) translate($radius) rotate(-($rotation + 0.9) * 1turn);
//         }
        
//         100% {
//             transform: rotate(($rotation) * 1turn) translate($radius) rotate(-($rotation + 1) * 1turn);
//         }  
//     }
// }